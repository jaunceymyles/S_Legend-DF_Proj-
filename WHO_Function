def get_user_text_input(prompt_message="Please enter something: "):
    user_input = input(prompt_message)
    return user_input

def get_multiple_typed_user_inputs(input_specs):
    responses = []
    for i, spec in enumerate(input_specs):
        prompt = spec['prompt']
        expected_type = spec['type']

        while True:
            user_input_str = get_user_text_input(f"{i+1}. {prompt} ")

            if expected_type == str:
                responses.append(user_input_str)
                break
            elif expected_type == bool:
                normalized_input = user_input_str.lower().strip()
                if normalized_input in ['yes', 'y', 'true']:
                    responses.append(1)
                    break
                elif normalized_input in ['no', 'n', 'false']:
                    responses.append(0)
                    break
                else:
                    print(f"Invalid input: '{user_input_str}' could not be converted to true or false . Please enter 'yes'/'no' or 'y'/'n'. Please try again.")
            else:
                try:
                    converted_input = expected_type(user_input_str)
                    
                    if converted_input < 0:
                        print(f"Invalid input: '{user_input_str}' is to small. Please try again.")
                        continue
                    
                    if "Population" in prompt:
                        responses.append(converted_input)
                        break
                        
                    if converted_input > 1000:
                        print(f"Invalid input: '{user_input_str}' is to large. Please try again.")
                        continue
                        
                    if "BMI" in prompt and not (15 <= converted_input <= 35):
                        print(f"Invalid input: '{user_input_str}' is out of the BMI range of 15 to 35. Please try again.")
                        continue
                        
                    
                    if "%" in prompt and converted_input >100:
                        print(f"Invalid input: '{user_input_str}' is to large of a percentage value. Please try again.")
                        continue
                        

                    responses.append(converted_input)
                    break
                except ValueError:
                    print(f"Invalid input: '{user_input_str}' could not be converted to numerical value. Please try again.")
    return responses



print("--- Please fill in the following form ---")
user_info_specs_Non_sensitive = [
    {'prompt': "Infant deaths per 1000 per year?", 'type': float},
    {'prompt': "Adult mortality per 1000 per year?", 'type': float},
    {'prompt': "Alcohol consumption per person per year in litres?", 'type': float},
    {'prompt': "Percentage of Hepatitis B immunization amongst 1 year olds?(%)", 'type': int}, 
    # {'prompt': "Measles per 1000 per year?", 'type': int},
    {'prompt': "average BMI", 'type': float},
    {'prompt': "Percentage of Polio immunization amongst 1 year olds?(%)", 'type': int},
    {'prompt': "Fatal cases of HIV per 1000 children between the ages of 0 - 4 years old per year?", 'type': float},
    {'prompt': "GDP per capita", 'type': int},
    {'prompt': "Population in million", 'type': float},
    {'prompt': "what percentage of the population between1 1-19 years are thin(%)", 'type': float},
    {'prompt': "Number of years of Schooling(years)",'type':float}
    # {'prompt': "is the country's economy status developed?",'type':bool}
]

user_info_specs_Sensitive = [
    {'prompt': "Alcohol consumption per person per year in litres?", 'type': float},
    {'prompt': "average BMI", 'type': float},
    {'prompt': "GDP per capita", 'type': int},
    {'prompt': "Population in million", 'type': float},
    {'prompt': "what percentage of the population between1 1-19 years are thin(%)", 'type': float},
    {'prompt': "Number of years of Schooling(years)",'type':float}
]


model_specs = {
    "sensitive": user_info_specs_Sensitive,
    "non-sensitive": user_info_specs_Non_sensitive
}

while True:
    typeOfModel = get_user_text_input(
        "What model would you like to use?\n"
        "Sensitive: This model does NOT process medical records or economic status.\n"
        "Non-sensitive: This model can process all types of data.\n"
        "Please type 'Sensitive' or 'Non-sensitive': "
    )
    typeOfModel_lower = typeOfModel.lower()

    if typeOfModel_lower in model_specs:
        chosen_specs = model_specs[typeOfModel_lower]
        print(f"You've selected the {typeOfModel} model. {'Medical records and economic status will not be processed.' if typeOfModel_lower == 'sensitive' else 'All data types can be processed.'} ")
        # user_data = get_multiple_typed_user_inputs(chosen_specs)
        break
    else:
        print("Invalid input. Please choose either 'Sensitive' or 'Non-sensitive'. Please try again.")

         
    

user_data = get_multiple_typed_user_inputs(chosen_specs)

print("\n--- Here is the collected data: ---")
for i, spec in enumerate(chosen_specs):
    print(f"{spec['prompt']} (Type: {spec['type'].__name__}): {user_data[i]}")


print("-" * 30)

